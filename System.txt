Persistent Data:
The Threaded File Management System already contains some folders & files present in the DATA file. It maintains
persistent data. Each time the program is run, new folders & files are automatically stored in the DATA file, which
gets loaded into the program in the next run.

Data Structure:
We used an array of linked lists as our main data structure to store various files and folders in the system. 
The head of the linked list stores the information about the folder. Whereas the fileâ€™s information (name, text, size) is stored in nodes, which are 
connected to the respective head/folder.

Memory Map:
The memory map shows the complete distribution of files and folders in the System. 
It also tells us the size (number of bytes) occupied by each file. 
The names in the middle represent the folders whereas inside are the files:

Files & Directories:
Files and directories were cautiously implemented in my File Management System. 
Almost 100 directories can be simultaneously created in the system. 
Each directory may contain as many files as the memory allows. The user has the option to create folders and files inside the folder of their choice.

Memory Allocation:
Linked allocation technique is followed for the memory allocation. 
A fixed size of 100MB is used for the total OS memory, which can be increased depending on the use. 
The memory taken by a file is determined by its size. If the file has no content in it, it occupies 0 bytes. 

Similarly, 1 bytes are allocated for each alphabet in the file. 
For instance, if a file contains 5 letters, a total of 5 Bytes would be occupied by that file. 
The change in size can be observed both in the memory map as well as in the total OS memory.

